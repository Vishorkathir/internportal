{
    "title": "Learn SQL with Step-by-Step Visual Execution",
    "subtitle1": "Master the fundamentals of SQL — from basics to advanced concepts.",
    "subtitle2": "Learn interactively, visualize data, and grow your real-world skills step by step.",
    "cardhead": "The Problem",
    "cardcontent": "A weekend train has limited Premium seats. Some Premium passengers may no-show. Your task: upgrade Standard passengers to Premium only if spare Premium seats exist after subtracting expected no-shows. Prioritize by higher loyalty_tier first, then earlier booking_time. Output each passenger's final_class and a clear reason (\"auto-upgrade\", \"kept-standard\", \"already-premium\").",
    "card2head": "Detective in Crime Scene - SQL Clues",
    "card2content": "To solve this mystery you need to know these SQL concepts:",
    "person": [
        {
            "id": "1",
            "userid": " Priya ",
            "loyaltier": "3",
            "booktime": " 2025-10-24 08:00:00",
            "class": "premium"
        },
        {
            "id": "2",
            "userid": "Rahul ",
            "loyaltier": "2",
            "booktime": "2025-10-24 09:00:00",
            "class": "premium"
        },
        {
            "id": "3",
            "userid": "Meera ",
            "loyaltier": "1",
            "booktime": "2025-10-24 10:00:00",
            "class": "premium"
        },
        {
            "id": "4",
            "userid": "Arun ",
            "loyaltier": "3",
            "booktime": "2025-10-24 07:00:00",
            "class": "Standard"
        },
        {
            "id": "5",
            "userid": "Bhav ",
            "loyaltier": "2",
            "booktime": "2025-10-24 08:00:00",
            "class": "Standard"
        },
        {
            "id": "6",
            "userid": "Chirag ",
            "loyaltier": "2",
            "booktime": "2025-10-24 08:00:00",
            "class": "Standard"
        },
        {
            "id": "7",
            "userid": "Divya ",
            "loyaltier": "2",
            "booktime": "2025-10-24 08:00:00",
            "class": "Standard"
        }
    ],
    "pretotal": "5",
    "preexpecte": "1",






    "contcard1": [
        {
            "ïd": "1",
            "title": "Compute usable Premium spare seats",
            "subtitle": "SQL Query",
            "code": "SELECT premium_total - premium_expected_noshow\n- (SELECT COUNT(*) FROM bookings WHERE class='Premium') AS spare \n  FROM train_capacity;",
            "multicont": [
                {
                    "id": "1",
                    "word1": "We start with premium_total seats.",
                    "word2": "Subtract premium_expected_noshow to be conservative (reserve for those likely absent).",
                    "word3": "Subtract currently booked Premium to know how many we can upgrade into.",
                    "word4": "The result spare is the maximum upgrades available.",
                    "word5": "If negative, treat as zero spare in the final step."
                }
            ],

            "subtitle2":"Output Visulaization",
            "tablebody":"spare",
            "table":"1"
        },
        {
            "ïd": "2",
            "title": "Compute usable Premium spare seats.Without additional context",
            "subtitle": "SQL Query",
            "code": "SELECT premium_total - premium_expected_noshow \n - (SELECT COUNT(*) FROM bookings WHERE class='Premium') AS spare \n FROM train_capacity;",
            "multicont": [
                {
                    "id": "1",
                    "word1": "We start with premium_total seats.",
                    "word2": "Subtract premium_expected_noshow to be conservative (reserve for those likely absent).",
                    "word3": "Subtract currently booked Premium to know how many we can upgrade into.",
                    "word4": "The result spare is the maximum upgrades available.",
                    "word5": "If negative, treat as zero spare in the final step."
                }
            ]
        }
    ]
}